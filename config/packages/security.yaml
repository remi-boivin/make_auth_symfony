security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        my_ldap_server:
            ldap:
                service: Symfony\Component\Ldap\Ldap
                base_dn: "dc=nebuale,dc=co"
                search_dn: "cn=read-only,dc=nebulae,dc=co"
                search_password: "_password"
                default_roles: ROLE_USER
                uid_key: uid
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
            form_login:
                # "login" is the name of the route created previously
                login_path: login
                check_path: login
                enable_csrf: true
            login_throttling:
                    max_attempts: 3
                    interval: '1 minutes'
            logout:
                path: app_logout
    #         form_login_ldap:
    #             # ...
    #             service: Symfony\Component\Ldap\Ldap

    #             # dn: uid=joni,ou=People,dc=nebulae,dc=co
    #             dn_string: 'uid={_username},dc=nebulae,dc=co'
    #             login_path: login
    #             check_path: login
    # # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
